{"version":3,"sources":["components/BasicForm.js","App.js","index.js"],"names":["BasicForm","useState","isValid","setisValid","isEmailValid","setisemailValid","isLastValid","setisLastValid","touched","setTouched","firstName","setFirstName","lastName","setLastName","email","setEmail","classes","emailClass","lastClass","errorText","errorEmailClass","errorLastClass","className","htmlFor","type","id","onChange","e","target","value","onBlur","trim","includes","App","ReactDOM","render","document","getElementById"],"mappings":"0LAgHeA,EA5GG,WAChB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAqCF,oBAAS,GAA9C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAmCJ,oBAAS,GAA5C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEA,EAAkCR,mBAAS,IAA3C,mBAAOS,EAAP,KAAkBC,EAAlB,KACA,EAAgCV,mBAAS,IAAzC,mBAAOW,EAAP,KAAiBC,EAAjB,KACA,EAA0BZ,mBAAS,IAAnC,mBAAOa,EAAP,KAAcC,EAAd,KAwCMC,EADMd,GAAWM,EACD,uBAAwB,eAExCS,EADWb,GAAgBI,EACJ,uBAAwB,eAE/CU,EADUZ,GAAeE,EACJ,uBAAwB,eAG7CW,EADWjB,GAAWM,EACA,aAAc,GAGpCY,EADWhB,GAAgBI,EACC,aAAc,GAG1Ca,EADUf,GAAeE,EACC,aAAc,GAE9C,OACE,iCACE,sBAAKc,UAAU,gBAAf,UACE,sBAAKA,UAAWN,EAAhB,UACE,uBAAOO,QAAQ,OAAOD,UAAWH,EAAjC,wBACA,uBACEK,KAAK,OACLC,GAAG,OACHF,QAAQ,aACRG,SA9DqB,SAACC,GAAD,OAAOhB,EAAagB,EAAEC,OAAOC,QA+DlDA,MAAOnB,EACPoB,OA5DiB,WACzBrB,GAAW,GACW,KAAnBC,EAAUqB,QAIb5B,GAAW,GACXM,GAAW,IAJTN,GAAW,SA4DT,sBAAKmB,UAAWJ,EAAhB,UACE,uBAAOK,QAAQ,OAAOD,UAAWD,EAAjC,uBACA,uBACEG,KAAK,OACLC,GAAG,OACHF,QAAQ,YACRG,SAxEoB,SAACC,GAAD,OAAOd,EAAYc,EAAEC,OAAOC,QAyEhDA,MAAOjB,EACPkB,OA7DgB,WACxBrB,GAAW,GACU,KAAlBG,EAASmB,QAIZxB,GAAe,GACfE,GAAW,IAJTF,GAAe,YA8Df,sBAAKe,UAAWL,EAAhB,UACE,uBAAOM,QAAQ,OAAOD,UAAWF,EAAjC,4BACA,uBACEI,KAAK,OACLC,GAAG,OACHF,QAAQ,QACRG,SAnFsB,SAACC,GAAD,OAAOZ,EAASY,EAAEC,OAAOC,QAoF/CA,MAAOf,EACPgB,OA/DkB,WACxBrB,GAAW,GACO,KAAfK,EAAMiB,QAILjB,EAAMkB,SAAS,MAInB3B,GAAgB,GAChBI,GAAW,IARTJ,GAAgB,SAgEhB,qBAAKiB,UAAU,eAAf,SACE,kDChGOW,MARf,WACE,OACE,qBAAKX,UAAU,MAAf,SACE,cAAC,EAAD,OCANY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.9851b0be.chunk.js","sourcesContent":["// проверка с помощью onBlur\n\nimport { useState } from 'react'\n\nconst BasicForm = () => {\n  const [isValid, setisValid] = useState(false)\n  const [isEmailValid,setisemailValid]=useState(false)\n  const [isLastValid,setisLastValid]=useState(false)\n  const [touched, setTouched] = useState(false)\n\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [email, setEmail] = useState('')\n\n  const firstNameChangeHandler = (e) => setFirstName(e.target.value)\n  const lastNameChangeHandler = (e) => setLastName(e.target.value)\n  const emailAddChangeHandler = (e) => setEmail(e.target.value)\n\n  const fisrtNameBlurHandler=()=>{\n    setTouched(true)\n    if(firstName.trim()===''){\n      setisValid(true)\n      return\n    }\n    setisValid(false)\n    setTouched(false)\n  }\n\n  const lastNameBlurHandler=()=>{\n    setTouched(true)\n    if(lastName.trim()===''){\n      setisLastValid(true)\n      return\n    }\n    setisLastValid(false)\n    setTouched(false)\n  }\n\n  const emailAddBlurHandler=()=>{\n    setTouched(true)\n    if(email.trim()===''){\n      setisemailValid(true)\n      return\n    }\n    if(!email.includes('@')){\n      setisemailValid(true) \n      return\n    }\n    setisemailValid(false)\n    setTouched(false)\n  }\n  const valid=isValid && touched\n  const classes=valid  ?'form-control invalid' :'form-control'\n  const emailValid=isEmailValid && touched\n  const emailClass=emailValid ?'form-control invalid' :'form-control'\n  const lastValid=isLastValid && touched\n  const lastClass=lastValid ?'form-control invalid' :'form-control'\n\n  const errorFirst=isValid && touched\n  const errorText=errorFirst ?'error-text' :''\n\n  const errorEmail=isEmailValid && touched\n  const errorEmailClass=errorEmail ?'error-text' :''\n\n  const errorLast=isLastValid && touched\n  const errorLastClass=errorLast ?'error-text' :''\n\n  return (\n    <form>\n      <div className=\"control-group\">\n        <div className={classes}>\n          <label htmlFor=\"name\" className={errorText}>First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            htmlFor=\"first name\"\n            onChange={firstNameChangeHandler}\n            value={firstName}\n            onBlur={fisrtNameBlurHandler}\n          />\n        </div>\n        <div className={lastClass}>\n          <label htmlFor=\"name\" className={errorLastClass}>Last Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            htmlFor=\"last name\"\n            onChange={lastNameChangeHandler}\n            value={lastName}\n            onBlur={lastNameBlurHandler}\n          />\n        </div>\n      </div>\n      <div className={emailClass}>\n        <label htmlFor=\"name\" className={errorEmailClass}>E-Mail Address</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          htmlFor=\"email\"\n          onChange={emailAddChangeHandler}\n          value={email}\n          onBlur={emailAddBlurHandler}\n\n        />\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  )\n}\n\nexport default BasicForm\n","import BasicForm from \"./components/BasicForm\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <BasicForm />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}